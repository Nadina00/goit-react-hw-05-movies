{"version":3,"file":"static/js/838.452cf199.chunk.js","mappings":"uNAAA,IAAMA,EAAW,+BACXC,EAAU,mCACVC,EAAe,iC,mKCARC,EAAqB,SAAAC,GAChC,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MADAC,QAAQC,MAAM,oBAAqBJ,EAASK,QACtC,IAAIC,MAAM,kCACjB,EACD,SAASC,EAAeC,GACtB,OAAOC,MAAM,GAAD,OACPb,EAAAA,GADO,qCAC8BC,EAAAA,GAD9B,gCAC6DW,EAD7D,yBAEVE,KAAKX,EACR,CAED,SAASY,EAAkBC,EAAQJ,GACjC,OAAOC,MAAM,GAAD,OACPb,EAAAA,GADO,iCAC0BC,EAAAA,GAD1B,gCACyDW,EADzD,sCAC2FI,IACrGF,KAAKX,EACR,CACD,SAASc,EAAqBC,GAC5B,OAAOL,MAAM,GAAD,OACPb,EAAAA,GADO,kBACWkB,EADX,oBAC8BjB,EAAAA,GAD9B,oBAEVa,KAAKX,EACR,CACD,SAASgB,EAAqBD,GAC5B,OAAOL,MAAM,GAAD,OACPb,EAAAA,GADO,kBACWkB,EADX,4BACsCjB,EAAAA,GADtC,oBAEVa,KAAKX,EACR,CACD,SAASiB,EAAqBF,GAC5B,OAAOL,MAAM,GAAD,OACPb,EAAAA,GADO,kBACWkB,EADX,4BACsCjB,EAAAA,GADtC,oBAEVa,KAAKX,EACR,C,sDClCM,IAAMkB,EAAgB,CACzBC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W,0HCiDd,UA7CuB,WACrB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQV,GAAYW,EAAAA,EAAAA,IAAU,IAAtBX,QACR,GAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOlB,EAAP,KAAcsB,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAASL,EAAAA,EAAAA,MAArC,eAAOZ,EAAP,KAAesB,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,EAAUV,EAAAA,EAAAA,UACVJ,EAAAA,EAAAA,IAAqBC,GAClBJ,MAAK,SAAAa,GACJC,EAASD,GACTI,EAAUV,EAAAA,EAAAA,SACX,IACAY,OAAM,SAAAzB,GACLsB,EAAStB,EAAM0B,SACfH,EAAUV,EAAAA,EAAAA,SACX,GACJ,GAAE,CAACH,IAEAT,IAAWY,EAAAA,EAAAA,SACN,SAAC,IAAD,CAAQc,OAAQC,EAAAA,KAGrB3B,IAAWY,EAAAA,EAAAA,UACRb,EAAM0B,QAEb3B,QAAQ8B,IAAIV,GACRlB,IAAWY,EAAAA,EAAAA,UAEX,4BACE,gBAAKiB,IAAKpC,EAAAA,GAAeyB,EAAMY,YAAaC,IAAI,MAChD,wBAAKb,EAAMc,SACX,6BAAKd,EAAMe,SAAX,QACA,kCAAUf,EAAMgB,iBAChB,kCAAUhB,EAAMiB,iBAChB,SAAC,KAAD,CAAMC,GAAE,kBAAalB,EAAMmB,GAAnB,SAA8B5B,QAASS,EAAMmB,GAAIC,UAAWC,EAAAA,EAAAA,KAApE,mBAGA,SAAC,KAAD,CAAMH,GAAE,kBAAalB,EAAMmB,GAAnB,YAAiC5B,QAASS,EAAMmB,GAAIC,UAAWC,EAAAA,EAAAA,KAAvE,6BAXN,EAiBD,C","sources":["components/services/ApiBaseUrl.jsx","components/services/ApiServices.jsx","components/services/loadingStatus.jsx","pages/MovieDetailts.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"4bceebe1d1f9bc99c966449bdeaecb86\";\nconst BASE_IMG_URL = \"https://image.tmdb.org/t/p/w300\";\n\nexport { BASE_URL, API_KEY, BASE_IMG_URL };\n\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=4bceebe1d1f9bc99c966449bdeaecb86&language=en-US\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=4bceebe1d1f9bc99c966449bdeaecb86&language=en-US&page=1\n\n//","import { BASE_URL, API_KEY } from './ApiBaseUrl';\n\nexport const handleResponseLink = response => {\n  if (response.ok) {\n    return response.json();\n  }\n  console.error('server response: ', response.status);\n  throw new Error('Sorry, something went wrong ...');\n};\nfunction fetchMoviesDay(page) {\n  return fetch(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false`\n  ).then(handleResponseLink);\n}\n\nfunction fetchMoviesByName(movies, page) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${movies}`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByDetails(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByCredits(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByReviews(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\n\nexport {\n  fetchMoviesByName,\n  fetchMoviesDay,\n  fetchMoviesByDetails,\n  fetchMoviesByCredits,\n  fetchMoviesByReviews,\n};\n","export const loadingStatus = {\n    IDLE: \"idle\",\n    PENDING: \"pending\",\n    RESOLVED: \"resolved\",\n    REJECTED: \"rejected\",\n  };\n  ","import React, { useState, useEffect} from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { fetchMoviesByDetails } from 'components/services/ApiServices';\nimport { BASE_IMG_URL } from '../components/services/ApiBaseUrl';\nimport { Loader } from 'components/Loader/Loader';\nimport { loadingStatus } from 'components/services/loadingStatus';\nimport styles from 'components/Navigation/Navigation.module.css'\n\n const MovieDetailts = () =>{\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams('');\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState(loadingStatus.IDLE);\n\n  useEffect(() => {\n    setStatus(loadingStatus.PENDING);\n    fetchMoviesByDetails(movieId)\n      .then(movie => {\n        setMovie(movie);\n        setStatus(loadingStatus.RESOLVED);\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus(loadingStatus.REJECTED);\n      });\n  }, [movieId]);\n\n  if (status === loadingStatus.PENDING) {\n    return <Loader loader={Loader} />;\n  }\n\n  if (status === loadingStatus.REJECTED) {\n    <h2>{error.message}</h2>;\n  }\n  console.log(movie)\n  if (status === loadingStatus.RESOLVED) {\n    return (\n      <div>\n        <img src={BASE_IMG_URL + movie.poster_path} alt=\"\" />\n        <h2>{movie.title}</h2>\n        <p> {movie.overview} </p>\n        <p>Vote: {movie.vote_average}</p>\n        <p>Data: {movie.release_date}</p>\n        <Link to={`/movies/${movie.id}/cast`} movieId={movie.id} className={styles.link}>\n          Cast\n        </Link>\n        <Link to={`/movies/${movie.id}/reviews`} movieId={movie.id} className={styles.link}>\n          Reviews\n        </Link>\n      </div>\n    );\n  }\n};\nexport default MovieDetailts;"],"names":["BASE_URL","API_KEY","BASE_IMG_URL","handleResponseLink","response","ok","json","console","error","status","Error","fetchMoviesDay","page","fetch","then","fetchMoviesByName","movies","fetchMoviesByDetails","movieId","fetchMoviesByCredits","fetchMoviesByReviews","loadingStatus","IDLE","PENDING","RESOLVED","REJECTED","useState","movie","setMovie","useParams","setError","setStatus","useEffect","catch","message","loader","Loader","log","src","poster_path","alt","title","overview","vote_average","release_date","to","id","className","styles"],"sourceRoot":""}
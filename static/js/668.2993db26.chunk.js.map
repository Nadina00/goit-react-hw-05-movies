{"version":3,"file":"static/js/668.2993db26.chunk.js","mappings":"iOAoDA,UA5CkB,WAChB,OAAmCA,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAYC,EAAAA,EAAAA,IAAU,IAAtBD,QACN,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAASO,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,EAAUF,EAAAA,EAAAA,UACVI,EAAAA,EAAAA,IAAqBR,GAClBS,MAAK,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACVF,MAAK,SAAAX,GACJC,EAAaD,GACbQ,EAAUF,EAAAA,EAAAA,UACNN,EAAWc,OAAS,IACtBN,EAAUF,EAAAA,EAAAA,UACVS,MAAO,wBAEV,IACAC,OAAM,SAAAZ,GACLC,EAASD,EAAMa,SACfT,EAAUF,EAAAA,EAAAA,SACX,GACJ,GAAE,CAACJ,IACAK,IAAWD,EAAAA,EAAAA,SACN,SAAC,IAAD,CAAQY,OAAQC,EAAAA,KAGrBZ,IAAWD,EAAAA,EAAAA,UACRF,EAAMa,QAETV,IAAWD,EAAAA,EAAAA,UAEX,eAAIc,UAAWC,EAAAA,EAAAA,UAAf,SACGrB,EAAWsB,KAAI,SAAAC,GAAS,OACvB,gBAAuBH,UAAWC,EAAAA,EAAAA,UAAlC,WACE,wCAAgBE,EAAUC,cAC1B,gBAAKC,IAAKC,EAAAA,GAAeH,EAAUI,aAAcC,IAAI,MACrD,kCAAUL,EAAUM,UAHbN,EAAUO,GADI,WAH/B,EAaD,C,uGCnDD,IAAMC,EAAW,+BACXC,EAAU,mCACVN,EAAe,iC,mKCARO,EAAqB,SAAAC,GAChC,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MADAC,QAAQjC,MAAM,oBAAqB8B,EAAS3B,QACtC,IAAI+B,MAAM,kCACjB,EACD,SAASC,EAAeC,GACtB,OAAOC,MAAM,GAAD,OACPV,EAAAA,GADO,qCAC8BC,EAAAA,GAD9B,gCAC6DQ,EAD7D,yBAEV7B,KAAKsB,EACR,CAED,SAASS,EAAkBC,EAAQH,GACjC,OAAOC,MAAM,GAAD,OACPV,EAAAA,GADO,iCAC0BC,EAAAA,GAD1B,gCACyDQ,EADzD,sCAC2FG,IACrGhC,KAAKsB,EACR,CACD,SAASW,EAAqB1C,GAC5B,OAAOuC,MAAM,GAAD,OACPV,EAAAA,GADO,kBACW7B,EADX,oBAC8B8B,EAAAA,GAD9B,oBAEVrB,KAAKsB,EACR,CACD,SAASvB,EAAqBR,GAC5B,OAAOuC,MAAM,GAAD,OACPV,EAAAA,GADO,kBACW7B,EADX,4BACsC8B,EAAAA,GADtC,oBAEVrB,KAAKsB,EACR,CACD,SAASY,EAAqB3C,GAC5B,OAAOuC,MAAM,GAAD,OACPV,EAAAA,GADO,kBACW7B,EADX,4BACsC8B,EAAAA,GADtC,oBAEVrB,KAAKsB,EACR,C,sDClCM,IAAM3B,EAAgB,CACzBwC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W,oBCHd,KAAgB,UAAY,6BAA6B,UAAY,6B","sources":["components/MoviesDetails/MovieCast.jsx","components/services/ApiBaseUrl.jsx","components/services/ApiServices.jsx","components/services/loadingStatus.jsx","webpack://react-homework-template/./src/components/MoviesDetails/MovieCast.module.css?6345"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams} from 'react-router-dom';\nimport { fetchMoviesByCredits } from 'components/services/ApiServices';\nimport { BASE_IMG_URL } from 'components/services/ApiBaseUrl';\nimport { Loader } from 'components/Loader/Loader';\nimport { loadingStatus } from 'components/services/loadingStatus';\nimport styles from './MovieCast.module.css'\n\nconst MovieCast = () =>{\n  const [movieCasts, setMovieCast] = useState([]);\n  let { movieId } = useParams('');\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState(loadingStatus.IDLE);\n\n  useEffect(() => {\n    setStatus(loadingStatus.PENDING);\n    fetchMoviesByCredits(movieId)\n      .then(casts => casts.cast)\n      .then(movieCasts => {\n        setMovieCast(movieCasts);\n        setStatus(loadingStatus.RESOLVED);\n        if (movieCasts.length < 1) {\n          setStatus(loadingStatus.REJECTED);\n          alert ('There are no cast...')\n        }\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus(loadingStatus.REJECTED);\n      });\n  }, [movieId]);\n  if (status === loadingStatus.PENDING) {\n    return <Loader loader={Loader} />;\n  }\n\n  if (status === loadingStatus.REJECTED) {\n    <h2>{error.message}</h2>;\n  }\n  if (status === loadingStatus.RESOLVED) {\n    return (\n      <ul className={styles.CastsList}>\n        {movieCasts.map(movieCast => (\n          <li key={movieCast.id} className={styles.CastsItem}>\n            <h2>Character: {movieCast.character}</h2>\n            <img src={BASE_IMG_URL + movieCast.profile_path} alt=\"\" />\n            <p>Name: {movieCast.name}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\nexport default MovieCast;\n","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"4bceebe1d1f9bc99c966449bdeaecb86\";\nconst BASE_IMG_URL = \"https://image.tmdb.org/t/p/w300\";\n\nexport { BASE_URL, API_KEY, BASE_IMG_URL };\n\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=4bceebe1d1f9bc99c966449bdeaecb86&language=en-US\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=4bceebe1d1f9bc99c966449bdeaecb86&language=en-US&page=1\n\n//","import { BASE_URL, API_KEY } from './ApiBaseUrl';\n\nexport const handleResponseLink = response => {\n  if (response.ok) {\n    return response.json();\n  }\n  console.error('server response: ', response.status);\n  throw new Error('Sorry, something went wrong ...');\n};\nfunction fetchMoviesDay(page) {\n  return fetch(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false`\n  ).then(handleResponseLink);\n}\n\nfunction fetchMoviesByName(movies, page) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${movies}`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByDetails(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByCredits(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByReviews(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\n\nexport {\n  fetchMoviesByName,\n  fetchMoviesDay,\n  fetchMoviesByDetails,\n  fetchMoviesByCredits,\n  fetchMoviesByReviews,\n};\n","export const loadingStatus = {\n    IDLE: \"idle\",\n    PENDING: \"pending\",\n    RESOLVED: \"resolved\",\n    REJECTED: \"rejected\",\n  };\n  ","// extracted by mini-css-extract-plugin\nexport default {\"CastsList\":\"MovieCast_CastsList__f6fQV\",\"CastsItem\":\"MovieCast_CastsItem__9qRim\"};"],"names":["useState","movieCasts","setMovieCast","movieId","useParams","error","setError","loadingStatus","status","setStatus","useEffect","fetchMoviesByCredits","then","casts","cast","length","alert","catch","message","loader","Loader","className","styles","map","movieCast","character","src","BASE_IMG_URL","profile_path","alt","name","id","BASE_URL","API_KEY","handleResponseLink","response","ok","json","console","Error","fetchMoviesDay","page","fetch","fetchMoviesByName","movies","fetchMoviesByDetails","fetchMoviesByReviews","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}
{"version":3,"file":"static/js/838.79ec7200.chunk.js","mappings":"0OAmEA,UA1DwB,WAAM,IAAD,IAC3B,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,IAAU,IAAtBD,QACR,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4BN,EAAAA,EAAAA,UAASO,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRH,EAAUF,EAAAA,EAAAA,UACVM,EAAAA,EAAAA,IAAqBV,GAClBW,MAAK,SAAAb,GACJC,EAASD,GACTQ,EAAUF,EAAAA,EAAAA,SACX,IACAQ,OAAM,SAAAV,GACLC,EAASD,EAAMW,SACfP,EAAUF,EAAAA,EAAAA,SACX,GACJ,GAAE,CAACJ,IAGN,IAAMc,EAAQ,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAGvC,OAAIX,IAAWD,EAAAA,EAAAA,SACN,SAAC,IAAD,CAAQa,OAAQC,EAAAA,KAGrBb,IAAWD,EAAAA,EAAAA,UACRF,EAAMW,QAGTR,IAAWD,EAAAA,EAAAA,UAEX,4BACE,gBAAKe,IAAKC,EAAAA,GAAetB,EAAMuB,YAAaC,IAAI,MAChD,wBAAKxB,EAAMyB,SACX,6BAAKzB,EAAM0B,SAAX,QACA,kCAAU1B,EAAM2B,iBAChB,kCAAU3B,EAAM4B,iBAEhB,gBAAIC,UAAWC,EAAAA,EAAAA,IAAf,WAEA,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAQF,UAAWC,EAAAA,EAAAA,KAAab,MAAS,CAACC,KAAMT,GAAzD,qBAEF,yBACE,SAAC,KAAD,CAAMsB,GAAG,UAAWF,UAAWC,EAAAA,EAAAA,KAAab,MAAS,CAACC,KAAMT,GAA5D,2BAKJ,SAAC,KAAD,KACA,SAAC,KAAD,CAAMsB,GAAIf,EAAWa,UAAWC,EAAAA,EAAAA,KAAhC,6BArBJ,EAyBD,C,uGClED,IAAME,EAAW,+BACXC,EAAU,mCACVX,EAAe,iC,mKCARY,EAAqB,SAAAC,GAChC,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MADAC,QAAQlC,MAAM,oBAAqB+B,EAAS5B,QACtC,IAAIgC,MAAM,kCACjB,EACD,SAASC,EAAeC,GACtB,OAAOC,MAAM,GAAD,OACPV,EAAAA,GADO,qCAC8BC,EAAAA,GAD9B,gCAC6DQ,EAD7D,yBAEV5B,KAAKqB,EACR,CAED,SAASS,EAAkBC,EAAQH,GACjC,OAAOC,MAAM,GAAD,OACPV,EAAAA,GADO,iCAC0BC,EAAAA,GAD1B,gCACyDQ,EADzD,sCAC2FG,IACrG/B,KAAKqB,EACR,CACD,SAAStB,EAAqBV,GAC5B,OAAOwC,MAAM,GAAD,OACPV,EAAAA,GADO,kBACW9B,EADX,oBAC8B+B,EAAAA,GAD9B,oBAEVpB,KAAKqB,EACR,CACD,SAASW,EAAqB3C,GAC5B,OAAOwC,MAAM,GAAD,OACPV,EAAAA,GADO,kBACW9B,EADX,4BACsC+B,EAAAA,GADtC,oBAEVpB,KAAKqB,EACR,CACD,SAASY,EAAqB5C,GAC5B,OAAOwC,MAAM,GAAD,OACPV,EAAAA,GADO,kBACW9B,EADX,4BACsC+B,EAAAA,GADtC,oBAEVpB,KAAKqB,EACR,C,sDClCM,IAAM5B,EAAgB,CACzByC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W","sources":["pages/MovieDetailts.jsx","services/ApiBaseUrl.jsx","services/ApiServices.jsx","services/loadingStatus.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMoviesByDetails } from 'services/ApiServices';\nimport { BASE_IMG_URL } from '../services/ApiBaseUrl';\nimport { Loader } from 'components/Loader/Loader';\nimport { loadingStatus } from 'services/loadingStatus';\nimport styles from 'components/Navigation/Navigation.module.css'\n\n   \n  const MovieDetailts = () =>{\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams('');\n  const [error, setError] = useState('');\n  const [status, setStatus] = useState(loadingStatus.IDLE);\n  const location = useLocation()\n\n  useEffect(() => {\n    setStatus(loadingStatus.PENDING);\n    fetchMoviesByDetails(movieId)\n      .then(movie => {\n        setMovie(movie);\n        setStatus(loadingStatus.RESOLVED);\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus(loadingStatus.REJECTED);\n      });\n  }, [movieId]);\n\n\nconst backLink = location.state?.from ?? '/'\n\n\n  if (status === loadingStatus.PENDING) {\n    return <Loader loader={Loader} />;\n  }\n\n  if (status === loadingStatus.REJECTED) {\n    <h2>{error.message}</h2>;\n  }\n  \n  if (status === loadingStatus.RESOLVED) {\n    return (\n      <div>\n        <img src={BASE_IMG_URL + movie.poster_path} alt=\"\" />\n        <h2>{movie.title}</h2>\n        <p> {movie.overview} </p>\n        <p>Vote: {movie.vote_average}</p>\n        <p>Data: {movie.release_date}</p>\n       \n        <ul className={styles.nav}>\n        \n        <li>\n          <Link to=\"cast\"  className={styles.link} state = {{from: location}}>Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\"  className={styles.link} state = {{from: location}}>Reviews</Link>\n        </li>\n        \n      </ul>\n      \n      <Outlet />\n      <Link to={backLink}  className={styles.link} >Go back</Link>\n      </div>\n    );\n  }\n};\nexport default MovieDetailts;","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"4bceebe1d1f9bc99c966449bdeaecb86\";\nconst BASE_IMG_URL = \"https://image.tmdb.org/t/p/w300\";\n\nexport { BASE_URL, API_KEY, BASE_IMG_URL };\n\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=4bceebe1d1f9bc99c966449bdeaecb86&language=en-US\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=4bceebe1d1f9bc99c966449bdeaecb86&language=en-US&page=1\n\n//","import { BASE_URL, API_KEY } from './ApiBaseUrl';\n\nexport const handleResponseLink = response => {\n  if (response.ok) {\n    return response.json();\n  }\n  console.error('server response: ', response.status);\n  throw new Error('Sorry, something went wrong ...');\n};\nfunction fetchMoviesDay(page) {\n  return fetch(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false`\n  ).then(handleResponseLink);\n}\n\nfunction fetchMoviesByName(movies, page) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${movies}`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByDetails(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByCredits(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\nfunction fetchMoviesByReviews(movieId) {\n  return fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  ).then(handleResponseLink);\n}\n\nexport {\n  fetchMoviesByName,\n  fetchMoviesDay,\n  fetchMoviesByDetails,\n  fetchMoviesByCredits,\n  fetchMoviesByReviews,\n};\n","export const loadingStatus = {\n    IDLE: \"idle\",\n    PENDING: \"pending\",\n    RESOLVED: \"resolved\",\n    REJECTED: \"rejected\",\n  };\n  "],"names":["useState","movie","setMovie","movieId","useParams","error","setError","loadingStatus","status","setStatus","location","useLocation","useEffect","fetchMoviesByDetails","then","catch","message","backLink","state","from","loader","Loader","src","BASE_IMG_URL","poster_path","alt","title","overview","vote_average","release_date","className","styles","to","BASE_URL","API_KEY","handleResponseLink","response","ok","json","console","Error","fetchMoviesDay","page","fetch","fetchMoviesByName","movies","fetchMoviesByCredits","fetchMoviesByReviews","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}